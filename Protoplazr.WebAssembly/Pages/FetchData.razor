@page "/fetchdata"
@using Grpc.Net.Client
@using Grpc.Net.Client.Web
@using Grpc.Core
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (items == null)
{
<p><em>Loading...</em></p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Message</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in items)
            {
        <tr>
            <td>@item.Id</td>
            <td>@item.Message</td>
        </tr>
        }
    </tbody>
</table>
}

@code {
    private List<PayloadItem> items = new ();
    
    protected override async Task OnInitializedAsync()
    {
        var channel = GrpcChannel.ForAddress("https://localhost:5001", new GrpcChannelOptions
        {
            HttpHandler = new GrpcWebHandler(new HttpClientHandler())
        });

        var client = new Greeter.GreeterClient(channel);
        var response = client.SayHello(new HelloRequest { Name = ".NET" });

        await foreach (var res in response.ResponseStream.ReadAllAsync())
        {
            items.Add(res.Items[0]);
            await InvokeAsync(StateHasChanged);
        }
    }
}
